buildscript{
    repositories {
        mavenLocal()
        mavenCentral()
        jcenter()
        maven { url 'https://kotlin.bintray.com/kotlinx' }
        maven { url "$artifactory_contextUrl/corda" }
        maven { url "$artifactory_contextUrl/list/corda-dev/" }
    }

    dependencies{
        classpath "net.corda.plugins:quasar-utils:$corda_gradle_plugins_version"
    }
}

plugins {
    id 'java'
}

apply plugin: 'net.corda.plugins.quasar-utils'

group 'com.r3.corda.finance.issuer'
version '0.1'

sourceCompatibility = 1.8

repositories {
    mavenCentral()
}

dependencies {
    testCompile group: 'junit', name: 'junit', version: '4.12'
    testCompile "$corda_release_group:corda-core:$corda_release_version"
    testCompile "$corda_release_group:corda-jackson:$corda_release_version"
    testCompile "$corda_release_group:corda-rpc:$corda_release_version"
    testCompile "$corda_release_group:corda-node-api:$corda_release_version"
    testCompile "$corda_release_group:corda:$corda_release_version"

    // For testing.
    testCompile "$corda_release_group:corda-node-driver:$corda_release_version"
    testCompile "org.jetbrains.kotlin:kotlin-test:$kotlin_version"
    testCompile "junit:junit:$junit_version"


    testCompile project(":common:contracts")
    testCompile project(":common:workflows")
    testCompile project(":service")
    testCompile project(":client")
    testCompile "$tokens_release_group:tokens-contracts:$tokens_release_version"
    testCompile "$tokens_release_group:tokens-workflows:$tokens_release_version"
    testCompile "$tokens_release_group:tokens-money:$tokens_release_version"
}

sourceSets {
    main {
        resources {
            srcDir "config/dev"
        }
    }
    test {
        resources {
            srcDir "config/test"
        }
    }
    integrationTest {
        kotlin {
            compileClasspath += main.output + test.output
            runtimeClasspath += main.output + test.output
            srcDir file('src/integrationTest/kotlin')
        }
    }
}

configurations {
    integrationTestCompile.extendsFrom testCompile
    integrationTestRuntime.extendsFrom testRuntime
}

task integrationTest(type: Test, dependsOn: []) {
    testClassesDirs = sourceSets.integrationTest.output.classesDirs
    classpath = sourceSets.integrationTest.runtimeClasspath
}
